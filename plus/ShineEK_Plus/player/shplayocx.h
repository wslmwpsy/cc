#if !defined(AFX_SHPLAYOCX_H__4CE22B47_C81C_443F_ADF8_EF539654BABF__INCLUDED_)
#define AFX_SHPLAYOCX_H__4CE22B47_C81C_443F_ADF8_EF539654BABF__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CShPlayOCX wrapper class

__declspec(dllimport) void WINAPI GUI_EnableWaveOut(BOOL fOnoff);
__declspec(dllimport) void WINAPI GUI_Startup();


class CShPlayOCX : public CWnd
{
protected:
	DECLARE_DYNCREATE(CShPlayOCX)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x61de6ff, 0x2bcd, 0x11d4, { 0x87, 0xe0, 0x0, 0x80, 0xc8, 0x2d, 0x3c, 0xe5 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	CString GetGszFileName();
	void SetGszFileName(LPCTSTR);
	short GetTrackNo();
	void SetTrackNo(short);
	short GetHwidth();
	void SetHwidth(short);
	short GetHheight();
	void SetHheight(short);
	long GetMpegStream();
	void SetMpegStream(long);
	long GetStepFrames();
	void SetStepFrames(long);
	CString GetGszWavFileName();
	void SetGszWavFileName(LPCTSTR);

// Operations
public:
	void Stop();
	void Play();
	long OpenDrv();
	void CloseDrv();
	long OpenFile();
	void Volume(short voll, short volr);
	void Balance(short soundtrack);
	short GetState();
	void TV();
	void VGA();
	void CloseFile();
	void Reset();
	long Step();
	void StepBack();
	void Seek(long Position);
	long Set(long flag, long value);
	long Get(long flag);
	long CheckHardware();
	long ResetDriver();
	long InitOSD(long nCards, LPCTSTR sPalOSDFile, long keyColor);
	long LoadOSDFile(LPCTSTR sOSDFile);
	long LoadBmpFile(LPCTSTR sBmpFile);
	long LoadText(LPCTSTR sText, long fgcl, long shcl, long lfHeight, long lfWidth, long lfEscapement, long lfOrientation, long lfWeight, short lfItalic, short lfUnderline, short lfStrikeOut, short lfCharSet, short lfOutPrecision, 
		short lfClipPrecision, short lfQuality, short lfPitchAndFamily, LPCTSTR lfFaceName);
	long UnloadOSD(long pOSDBuf);
	long SetOSDBuf(long iCard, long iOSD, long pOSDBuf);
	long GetOSDBuf(long iCard, long iOSD);
	long SetPlayVarOSD(long iCard, long iOSD, long play_mode, long nRepeat, long iHSpeed, long iVSpeed, long nDelayTime, long sx, long sy, long ex, long ey);
	long GetPlayStateOSD(long iCard, long iOSD);
	long GetOSDScreenSizeW();
	long GetOSDScreenSizeH();
	long GetOSDSizeW(long pOSDBuf);
	long GetOSDSizeH(long pOSDBuf);
	long PlayOSD(long iCard, long iOSD);
	long StopOSD(long iCard, long iOSD);
	long FinishOSD();
	long Command(long cmd, long flag, long value);
	void Pause();
	void OSDSetSwapper(long pSwapper);
	void OSDSwitchKTV(long ktv);
	void OSDKeyDown(long key);
	void OSDListChanged(long list);
	void VODEnableDbDisplay(long e);
	void VODSetScreenWindow(long hwnd);
	void VODShowScreenVideo(long e);
	long Preview_Open(LPCTSTR pMedia, long hwnd);
	long Preview_Close();
	long Preview_Control(long nCode, long argv0, long argv1);
	long TV_Open(LPCTSTR pDev, long hwnd, long nSignal);
	long TV_Close();
	long TV_Control(long nCode, long argv0, long argv1);
	long Live_Open(long n, LPCTSTR pMedia);
	long Live_Close(long n);
	long Live_Control(long n, long nCode, long argv0, long argv1);
	void AboutBox();
	long WaveMixer_Play(LPCTSTR sWaveFile, long fLoop, long fMusicOut);
	long WaveMixer_Stop();
	long WaveMixer_SetTone(long nTone);
	long WaveMixer_GetTone();
	void Ctrl_SetNotifyWindow(long hwndNotify);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_SHPLAYOCX_H__4CE22B47_C81C_443F_ADF8_EF539654BABF__INCLUDED_)
